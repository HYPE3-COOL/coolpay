import '@/app/polyfills';
import { and, desc, eq, gt, lt, SQL } from 'drizzle-orm';
import { NextRequest } from 'next/server';
import { db } from '@/db';
import { user } from '@/db/schema/user';
import { Cursor } from '@/utils/string';

export async function PUT(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const id = BigInt(params.id)
    if (isNaN(Number(id))) return new Response('Invalid User ID', { status: 400 });

    const body = await request.json();
    const updatedUser = await db
      .update(user)
      .set(body)
      .where(eq(user.id, id)) // Ensure types match
      .returning();

    return Response.json({ data: updatedUser });
  } catch (error) {
    console.error('Failed to update user:', error);
    return new Response('Internal Server Error', { status: 500 });
  }
}

export async function DELETE(request: NextRequest, { params }: { params: { id: string } }) {
  try {
    const id = BigInt(params.id)
    if (isNaN(Number(id))) return new Response('Invalid User ID', { status: 400 });

    const deletedUser = await db
      .delete(user)
      .where(eq(user.id, id)) // Ensure types match
      .returning();

    return Response.json({ data: deletedUser });
  } catch (error) {
    console.error('Failed to delete user:', error);
    return new Response('Internal Server Error', { status: 500 });
  }
}