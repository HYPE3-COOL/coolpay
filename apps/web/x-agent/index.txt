import { Graph, InferStepType } from '@agent-graph/core';
import { Context } from './context';
import { crawler } from './crawler';
import { generator } from './generator';
import { resolver } from './resolver';
import { reviewer } from './reviewer';

export const builder = new Graph<Context>()
  .addV(resolver)
  .addV(crawler)
  .addV(generator)
  .addV(reviewer)
  .addE(resolver, () => [crawler])
  .addE(crawler, () => [generator])
  .addE(generator, () => [reviewer]);

const context: Context = {};
export const graph = builder.build({ context });

type Step = InferStepType<typeof builder>;
const step: Step = { next: 'resolver', props: {} };

graph.run([step]);
